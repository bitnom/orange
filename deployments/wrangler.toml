name = "orange-meets"

account_id = "8477399eb04accc1792af96aeaa25222"
main = "./build/index.js"
# https://developers.cloudflare.com/workers/platform/compatibility-dates
compatibility_date = "2024-06-20"
compatibility_flags = ["nodejs_compat"]

[site]
  bucket = "./public"

[[build.upload.rules]]
  type = "ESModule"
  globs = ["**/*.js"]

[env.production]
kv_namespaces = [
  { binding = "FEEDBACK_STORAGE", id = "301815bba6144355bfda771856ca4614", preview_id = "acb3952303514551a17b6fe627fb6953" }
]
durable_objects.bindings = [
  { name = "rooms", class_name = "ChatRoom" },
]

[env.production.vars]
CALLS_APP_ID = "700932c6384d6f4ba19838afa3ab93cd"

[[env.production.queues.producers]]
 queue = "orange-meets-feedback-queue"
 binding = "FEEDBACK_QUEUE"

[[env.production.queues.consumers]]
 queue = "orange-meets-feedback-queue"
 # Required: this should match the name of the queue you created in step 3.
 # If you misspell the name, you will receive an error when attempting to publish your Worker.
 max_batch_size = 10 # optional: defaults to 10
 max_batch_timeout = 5 # optional: defaults to 5 seconds

[[env.production.d1_databases]]
binding = "DB" # i.e. available in your Worker on env.DB
database_name = "orange-meets-db-production"
database_id = "125a3008-0a8a-4ada-a829-7d2eb2ef15bc"


[env.development]
kv_namespaces = [
  { binding = "FEEDBACK_STORAGE", id = "acb3952303514551a17b6fe627fb6953", preview_id = "acb3952303514551a17b6fe627fb6953" }
]
durable_objects.bindings = [
  { name = "rooms", class_name = "ChatRoom" },
]

[env.development.vars]
CALLS_APP_ID = "f0ea263009299383d09d44b9fad5316c"

[[env.development.queues.producers]]
 queue = "orange-meets-feedback-queue-development"
 binding = "FEEDBACK_QUEUE"

[[env.development.queues.consumers]]
 queue = "orange-meets-feedback-queue-development"
 # Required: this should match the name of the queue you created in step 3.
 # If you misspell the name, you will receive an error when attempting to publish your Worker.
 max_batch_size = 10 # optional: defaults to 10
 max_batch_timeout = 5 # optional: defaults to 5 seconds

[[env.development.d1_databases]]
binding = "DB" # i.e. available in your Worker on env.DB
database_name = "orange-meets-db-development"
database_id = "6b0eceef-c836-4ba7-aac2-fa9b6f702e3b"

[env.staging]
kv_namespaces = [
  { binding = "FEEDBACK_STORAGE", id = "acb3952303514551a17b6fe627fb6953", preview_id = "acb3952303514551a17b6fe627fb6953" }
]
durable_objects.bindings = [
  { name = "rooms", class_name = "ChatRoom" },
]

[env.staging.vars]
CALLS_APP_ID = "9effffd0c077c1115c7d285e55593a9a"

[[env.staging.queues.producers]]
 queue = "orange-meets-feedback-queue-staging"
 binding = "FEEDBACK_QUEUE"

[[env.staging.queues.consumers]]
 queue = "orange-meets-feedback-queue-staging"
 # Required: this should match the name of the queue you created in step 3.
 # If you misspell the name, you will receive an error when attempting to publish your Worker.
 max_batch_size = 10 # optional: defaults to 10
 max_batch_timeout = 5 # optional: defaults to 5 seconds


[[env.staging.d1_databases]]
binding = "DB" # i.e. available in your Worker on env.DB
database_name = "orange-meets-db-staging"
database_id = "e9091e61-7e0a-4719-b9cb-3e1c3e95e9fa"


[env.public.vars]
CALLS_APP_ID = "d83fd70c193329ea4f683ffe7b34d056"
PUBLIC = "true"

[[env.public.queues.producers]]
 queue = "orange-meets-feedback-queue-public"
 binding = "FEEDBACK_QUEUE"

[[env.public.queues.consumers]]
 queue = "orange-meets-feedback-queue-public"
 # Required: this should match the name of the queue you created in step 3.
 # If you misspell the name, you will receive an error when attempting to publish your Worker.
 max_batch_size = 10 # optional: defaults to 10
 max_batch_timeout = 5 # optional: defaults to 5 seconds
 
[env.public.durable_objects]
bindings = [
  { name = "rooms", class_name = "ChatRoom", script_name = "orange-meets-public" }
]

# Indicate that you want the ChatRoom and RateLimiter classes to be callable as Durable Objects.
[[migrations]]
tag = "v1" # Should be unique for each entry
new_classes = ["ChatRoom", "RateLimiter"]

[[migrations]]
tag = "v2"
deleted_classes = ["RateLimiter"] 

# The necessary secrets are:
# - CALLS_APP_SECRET
# Run `echo <VALUE> | wrangler secret put <NAME>` for each of these
